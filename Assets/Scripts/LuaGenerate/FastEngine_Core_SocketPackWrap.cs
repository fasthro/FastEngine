//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FastEngine_Core_SocketPackWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FastEngine.Core.SocketPack), typeof(System.Object));
		L.RegFunction("Release", Release);
		L.RegFunction("Send", Send);
		L.RegFunction("WriteByte", WriteByte);
		L.RegFunction("WriteBytes", WriteBytes);
		L.RegFunction("WriteInt", WriteInt);
		L.RegFunction("WriteUint", WriteUint);
		L.RegFunction("WriteShort", WriteShort);
		L.RegFunction("WriteUshort", WriteUshort);
		L.RegFunction("WriteLong", WriteLong);
		L.RegFunction("WriteUlong", WriteUlong);
		L.RegFunction("WriteBoolean", WriteBoolean);
		L.RegFunction("WriteFloat", WriteFloat);
		L.RegFunction("WriteDouble", WriteDouble);
		L.RegFunction("WriteString", WriteString);
		L.RegFunction("WriteUnicodeString", WriteUnicodeString);
		L.RegFunction("ReadByte", ReadByte);
		L.RegFunction("ReadBytes", ReadBytes);
		L.RegFunction("ReadInt", ReadInt);
		L.RegFunction("ReadUint", ReadUint);
		L.RegFunction("ReadShort", ReadShort);
		L.RegFunction("ReadUshort", ReadUshort);
		L.RegFunction("ReadLong", ReadLong);
		L.RegFunction("ReadUlong", ReadUlong);
		L.RegFunction("ReadBoolean", ReadBoolean);
		L.RegFunction("ReadFloat", ReadFloat);
		L.RegFunction("ReadDouble", ReadDouble);
		L.RegFunction("ReadString", ReadString);
		L.RegFunction("ReadUnicodeString", ReadUnicodeString);
		L.RegFunction("New", _CreateFastEngine_Core_SocketPack);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("UseProto", get_UseProto, null);
		L.RegVar("valid", get_valid, set_valid);
		L.RegVar("cmd", get_cmd, null);
		L.RegVar("sessionId", get_sessionId, null);
		L.RegVar("data", get_data, null);
		L.RegVar("dataSize", get_dataSize, null);
		L.RegVar("packType", get_packType, null);
		L.RegVar("luapb", get_luapb, null);
		L.RegVar("error", get_error, null);
		L.RegVar("errorCode", get_errorCode, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFastEngine_Core_SocketPack(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				FastEngine.Core.SocketPack obj = new FastEngine.Core.SocketPack(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Google.Protobuf.IMessage>(L, 2))
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				Google.Protobuf.IMessage arg1 = (Google.Protobuf.IMessage)ToLua.ToObject(L, 2);
				FastEngine.Core.SocketPack obj = new FastEngine.Core.SocketPack(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<LuaInterface.LuaByteBuffer>(L, 2))
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				LuaByteBuffer arg1 = new LuaByteBuffer(ToLua.CheckByteBuffer(L, 2));
				FastEngine.Core.SocketPack obj = new FastEngine.Core.SocketPack(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<int>(L, 2))
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				int arg1 = (int)LuaDLL.lua_tonumber(L, 2);
				FastEngine.Core.SocketPack obj = new FastEngine.Core.SocketPack(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 3)
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				byte[] arg2 = ToLua.CheckByteBuffer(L, 3);
				FastEngine.Core.SocketPack obj = new FastEngine.Core.SocketPack(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FastEngine.Core.SocketPack.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Release(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			obj.Release();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Send(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			obj.Send();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteByte(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			byte arg0 = (byte)LuaDLL.luaL_checknumber(L, 2);
			obj.WriteByte(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteBytes(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
				byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
				obj.WriteBytes(arg0);
				return 0;
			}
			else if (count == 3)
			{
				FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
				byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				obj.WriteBytes(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FastEngine.Core.SocketPack.WriteBytes");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteInt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.WriteInt(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteUint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.WriteUint(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteShort(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			short arg0 = (short)LuaDLL.luaL_checknumber(L, 2);
			obj.WriteShort(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteUshort(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			obj.WriteUshort(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteLong(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			obj.WriteLong(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteUlong(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			ulong arg0 = LuaDLL.tolua_checkuint64(L, 2);
			obj.WriteUlong(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteBoolean(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.WriteBoolean(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteFloat(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.WriteFloat(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteDouble(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			double arg0 = (double)LuaDLL.luaL_checknumber(L, 2);
			obj.WriteDouble(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.WriteString(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteUnicodeString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.WriteUnicodeString(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadByte(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			byte o = obj.ReadByte();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadBytes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			byte[] o = obj.ReadBytes();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadInt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			int o = obj.ReadInt();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadUint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			uint o = obj.ReadUint();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadShort(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			short o = obj.ReadShort();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadUshort(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			ushort o = obj.ReadUshort();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadLong(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			long o = obj.ReadLong();
			LuaDLL.tolua_pushint64(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadUlong(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			ulong o = obj.ReadUlong();
			LuaDLL.tolua_pushuint64(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadBoolean(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			bool o = obj.ReadBoolean();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadFloat(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			float o = obj.ReadFloat();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadDouble(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			double o = obj.ReadDouble();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			string o = obj.ReadString();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReadUnicodeString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)ToLua.CheckObject<FastEngine.Core.SocketPack>(L, 1);
			string o = obj.ReadUnicodeString();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UseProto(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, FastEngine.Core.SocketPack.UseProto);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_valid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)o;
			bool ret = obj.valid;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index valid on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cmd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)o;
			int ret = obj.cmd;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cmd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sessionId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)o;
			int ret = obj.sessionId;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index sessionId on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_data(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)o;
			byte[] ret = obj.data;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index data on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dataSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)o;
			int ret = obj.dataSize;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dataSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_packType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)o;
			FastEngine.Core.SocketPackType ret = obj.packType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index packType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_luapb(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)o;
			LuaInterface.LuaByteBuffer ret = obj.luapb;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index luapb on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_error(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)o;
			bool ret = obj.error;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index error on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_errorCode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)o;
			int ret = obj.errorCode;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index errorCode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_valid(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FastEngine.Core.SocketPack obj = (FastEngine.Core.SocketPack)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.valid = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index valid on a nil value");
		}
	}
}

