//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FastEngine_AppRunModelWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(FastEngine.AppRunModel));
		L.RegVar("Develop", get_Develop, null);
		L.RegVar("Release", get_Release, null);
		L.RegVar("Test", get_Test, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<FastEngine.AppRunModel>.Check = CheckType;
		StackTraits<FastEngine.AppRunModel>.Push = Push;
	}

	static void Push(IntPtr L, FastEngine.AppRunModel arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(FastEngine.AppRunModel), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Develop(IntPtr L)
	{
		ToLua.Push(L, FastEngine.AppRunModel.Develop);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Release(IntPtr L)
	{
		ToLua.Push(L, FastEngine.AppRunModel.Release);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Test(IntPtr L)
	{
		ToLua.Push(L, FastEngine.AppRunModel.Test);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		FastEngine.AppRunModel o = (FastEngine.AppRunModel)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

