//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FastEngine_MonoSingleton_FastEngine_AppWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FastEngine.MonoSingleton<FastEngine.App>), typeof(UnityEngine.MonoBehaviour), "MonoSingleton_FastEngine_App");
		L.RegFunction("InitializeSingleton", InitializeSingleton);
		L.RegFunction("HasInstance", HasInstance);
		L.RegFunction("Dispose", Dispose);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitializeSingleton(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.MonoSingleton<FastEngine.App> obj = (FastEngine.MonoSingleton<FastEngine.App>)ToLua.CheckObject<FastEngine.MonoSingleton<FastEngine.App>>(L, 1);
			obj.InitializeSingleton();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HasInstance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			bool o = FastEngine.MonoSingleton<FastEngine.App>.HasInstance();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FastEngine.MonoSingleton<FastEngine.App> obj = (FastEngine.MonoSingleton<FastEngine.App>)ToLua.CheckObject<FastEngine.MonoSingleton<FastEngine.App>>(L, 1);
			obj.Dispose();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, FastEngine.MonoSingleton<FastEngine.App>.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

